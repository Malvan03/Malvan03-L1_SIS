/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.107
 * Generated at: 2025-07-14 17:03:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Login Metro Línea 1</title>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/login.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"form-container\">\n");
      out.write("        <!-- Logo Metro Línea 1 -->\n");
      out.write("        <div style=\"width: 100%; text-align: center;\">\n");
      out.write("            <img src=\"images/LOGOL1.png\" alt=\"Logo Metro Línea 1\" style=\"height: 120px; max-width: 80%; object-fit: contain; margin-bottom: 18px;\">\n");
      out.write("        </div>\n");
      out.write("        <h2>Login Metro Línea 1</h2>\n");
      out.write("        <form action=\"LoginServlet\" method=\"post\" autocomplete=\"off\">\n");
      out.write("            <label for=\"usuario\">DNI:</label>\n");
      out.write("            <input type=\"text\" id=\"usuario\" name=\"usuario\" maxlength=\"8\" required pattern=\"\\d{8}\" title=\"Ingrese 8 dígitos\" autofocus />\n");
      out.write("\n");
      out.write("            <label for=\"password\">Contraseña:</label>\n");
      out.write("            <input type=\"password\" id=\"password\" name=\"password\" required />\n");
      out.write("\n");
      out.write("            <!-- Mostrar/Ocultar contraseña -->\n");
      out.write("            <div style=\"margin-bottom: 14px; margin-top: -7px;\">\n");
      out.write("                <input type=\"checkbox\" id=\"showPass\" onclick=\"togglePassword()\" style=\"vertical-align: middle;\">\n");
      out.write("                <label for=\"showPass\" style=\"font-size: 0.98em; vertical-align: middle; cursor:pointer;\">Mostrar contraseña</label>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <input type=\"submit\" value=\"Ingresar\" />\n");
      out.write("\n");
      out.write("            <div style=\"margin-top:8px; text-align: right;\">\n");
      out.write("                <a href=\"recuperar_contrasena.jsp\" style=\"font-size:0.98em;\">¿Olvidaste tu contraseña?</a>\n");
      out.write("            </div>\n");
      out.write("        </form>\n");
      out.write("        ");

            String error = request.getParameter("error");
            if ("datos".equals(error)) {
        
      out.write("\n");
      out.write("            <div class=\"error\">Usuario o contraseña incorrectos.</div>\n");
      out.write("        ");
 } else if ("bloqueado".equals(error)) { 
      out.write("\n");
      out.write("            <div class=\"error\">Usuario bloqueado temporalmente por intentos fallidos. Intente nuevamente en 15 minutos.</div>\n");
      out.write("        ");
 } else if ("tipo".equals(error)) { 
      out.write("\n");
      out.write("            <div class=\"error\">Tipo de usuario no permitido.</div>\n");
      out.write("        ");
 } else if ("inactivo".equals(error)) { 
      out.write("\n");
      out.write("            <div class=\"error\">Usuario inactivo o no habilitado.</div>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <script>\n");
      out.write("        function togglePassword() {\n");
      out.write("            var passInput = document.getElementById(\"password\");\n");
      out.write("            passInput.type = passInput.type === \"password\" ? \"text\" : \"password\";\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
