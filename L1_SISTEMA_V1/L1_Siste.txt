-- Crear la base de datos
CREATE DATABASE L1_Sistemas;
GO

-- Usar la base de datos
USE L1_Sistemas;
GO

-- Crear la tabla Conductores
CREATE TABLE Conductores (
    id_conductor INT IDENTITY(1,1) PRIMARY KEY,
    dni VARCHAR(8) NOT NULL UNIQUE,
    nombre_completo VARCHAR(100) NOT NULL,
    tipo_conductor VARCHAR(2) NOT NULL, -- 'FT' o 'PT'
    base_asignada VARCHAR(3) NOT NULL, -- Ejemplo: 'VES', 'BAY'
    habilitado_ensenar BIT NOT NULL,
    estado VARCHAR(15) NOT NULL, -- 'HABILITADO' o 'NO HABILITADO'
    saldo_tiempo TIME NOT NULL, -- Tiempo disponible para trabajar
    fecha_creacion DATETIME DEFAULT GETDATE() -- Fecha de creaci贸n del conductor
);
GO

-- Insertar datos en Conductores
INSERT INTO Conductores (dni, nombre_completo, tipo_conductor, base_asignada, habilitado_ensenar, estado, saldo_tiempo)
VALUES 
('75610056', 'JOEL JEFFERSON GOMEZ OLGUIN', 'FT', 'VES', 1, 'HABILITADO', '02:00'),
('12345678', 'Karolay Huamani Villavicencio', 'PT', 'BAY', 0, 'HABILITADO', '02:30'),
('73056176', 'Mauro Diego Alvan De la cruz', 'FT', 'VES', 1, 'HABILITADO', '04:00');
GO

-- Crear la tabla Usuarios
CREATE TABLE Usuarios (
    id_usuario INT IDENTITY(1,1) PRIMARY KEY,
    usuario VARCHAR(50) NOT NULL,
    contrasena_hash VARCHAR(255) NOT NULL,
    rol VARCHAR(15) NOT NULL, -- 'CONDUCTOR' o 'ADMIN'
    id_conductor INT NULL, -- Puede ser nulo para administradores
    fecha_creacion DATETIME DEFAULT GETDATE(), -- Fecha de creaci贸n del usuario
    estado_usuario VARCHAR(15) DEFAULT 'ACTIVO', -- Estado del usuario (ACTIVO, INACTIVO)
    FOREIGN KEY (id_conductor) REFERENCES Conductores(id_conductor) ON DELETE SET NULL
);
GO

-- Insertar datos en Usuarios (admin y conductores)
INSERT INTO Usuarios (usuario, contrasena_hash, rol, id_conductor)
VALUES 
('admin_mauro', 'hashed_73056176', 'ADMIN', NULL),
('75610056', 'hashed_pass_joel', 'CONDUCTOR', (SELECT id_conductor FROM Conductores WHERE dni = '75610056')),
('12345678', 'hashed_pass_karolay', 'CONDUCTOR', (SELECT id_conductor FROM Conductores WHERE dni = '12345678'));
GO

-- Crear la tabla Turnos
CREATE TABLE Turnos (
    id_turno INT IDENTITY(1,1) PRIMARY KEY,
    codigo_turno VARCHAR(50) NOT NULL,
    tipo_turno VARCHAR(50) NOT NULL, -- 'NORMAL', 'ESPECIAL', etc.
    hora_inicio TIME NOT NULL,
    hora_fin TIME NOT NULL,
    base_inicio VARCHAR(50) NOT NULL,
    base_fin VARCHAR(50) NOT NULL,
    carrera_anterior VARCHAR(50),
    carrera_asignada VARCHAR(50),
    carrera_posterior VARCHAR(50),
    tipo_carrera VARCHAR(50),
    tiene_refrigerio BIT NOT NULL,
    hora_refrigerio TIME NULL, -- Hora del refrigerio (si tiene)
    tiempo_laborado TIME NOT NULL -- Tiempo total trabajado
);
GO


-- Insertar datos en Turnos
INSERT INTO Turnos (codigo_turno, tipo_turno, hora_inicio, hora_fin, base_inicio, base_fin, carrera_anterior, carrera_asignada, carrera_posterior, tipo_carrera, tiene_refrigerio, hora_refrigerio, tiempo_laborado)
VALUES 
('001', 'NORMAL', '04:20', '09:50', 'VES', 'VES', 'PVES.2', '1006', '1025', 'PAR', 0, NULL, '05:30'),
('002', 'ESPECIAL', '06:00', '10:00', 'BAY', 'BAY', 'PBAY.1', '1010', '1035', 'IMPAR', 1, '08:00', '04:30'),
('003', 'NORMAL', '08:00', '10:00', 'VES', 'BAY', 'PBASE.1', '1025', '1030', 'IMPAR', 0, NULL, '04:00');
GO


-- Crear la tabla Asignaciones
CREATE TABLE Asignaciones (
    id_asignacion INT IDENTITY(1,1) PRIMARY KEY,
    id_conductor INT NOT NULL,
    id_turno INT NOT NULL,
    fecha DATE NOT NULL,
    dia_semana VARCHAR(10) NOT NULL,
    observaciones VARCHAR(MAX) NULL,
    FOREIGN KEY (id_conductor) REFERENCES Conductores(id_conductor),
    FOREIGN KEY (id_turno) REFERENCES Turnos(id_turno)
);
GO

-- Insertar asignaciones
INSERT INTO Asignaciones (id_conductor, id_turno, fecha, dia_semana, observaciones)
VALUES 
((SELECT id_conductor FROM Conductores WHERE dni = '75610056'), 1, '2025-06-01', 'LUN', 'Asignaci贸n regular'),
((SELECT id_conductor FROM Conductores WHERE dni = '12345678'), 2, '2025-06-02', 'MAR', 'Asignaci贸n especial');
GO

-- Crear la tabla Carreras
CREATE TABLE Carreras (
    id_carrera INT IDENTITY(1,1) PRIMARY KEY,
    id_turno INT NOT NULL,
    carrera_nombre VARCHAR(255) NOT NULL,
    hora_inicio TIME NOT NULL,
    hora_fin TIME NOT NULL,
    tiene_refrigerio BIT NOT NULL,
    cantidad_carreras INT NOT NULL,
    tipo_carrera VARCHAR(50),
    FOREIGN KEY (id_turno) REFERENCES Turnos(id_turno)
);
GO

-- Insertar datos en Carreras
INSERT INTO Carreras (id_turno, carrera_nombre, hora_inicio, hora_fin, tiene_refrigerio, cantidad_carreras, tipo_carrera)
VALUES 
(1, 'Carrera 3', '06:00', '07:00', 1, 3, 'IMPAR'),
(1, 'Carrera 4', '07:00', '08:00', 0, 4, 'PAR'),
(2, 'Carrera 5', '06:30', '07:30', 1, 5, 'IMPAR'),
(2, 'Carrera 6', '07:30', '08:30', 0, 6, 'PAR'),
(3, 'Carrera 7', '10:00', '11:00', 0, 3, 'IMPAR');
GO


-- Crear la tabla SolicitudesCambio
CREATE TABLE SolicitudesCambio (
    id_solicitud INT IDENTITY(1,1) PRIMARY KEY,
    fecha_solicitud DATE NOT NULL,
    fecha_turno DATE NOT NULL,
    id_conductor_solicitante INT NOT NULL,
    id_conductor_receptor INT NOT NULL,
    id_asignacion_original INT NOT NULL,
    id_asignacion_solicitada INT NOT NULL,
    estado_receptor VARCHAR(10) NOT NULL, -- 'PENDIENTE', 'SI', 'NO'
    estado_admin VARCHAR(10) NOT NULL, -- 'PENDIENTE', 'SI', 'NO'
    observacion_admin VARCHAR(MAX) NULL,
    comentarios_conductor VARCHAR(MAX) NULL, -- Comentarios del conductor
    FOREIGN KEY (id_conductor_solicitante) REFERENCES Conductores(id_conductor),
    FOREIGN KEY (id_conductor_receptor) REFERENCES Conductores(id_conductor),
    FOREIGN KEY (id_asignacion_original) REFERENCES Asignaciones(id_asignacion),
    FOREIGN KEY (id_asignacion_solicitada) REFERENCES Asignaciones(id_asignacion)
);
GO

-- Insertar solicitudes de cambio
INSERT INTO SolicitudesCambio (fecha_solicitud, fecha_turno, id_conductor_solicitante, id_conductor_receptor, id_asignacion_original, id_asignacion_solicitada, estado_receptor, estado_admin)
VALUES 
('2025-06-01', '2025-06-02', 1, 2, 1, 2, 'PENDIENTE', 'PENDIENTE');
GO
